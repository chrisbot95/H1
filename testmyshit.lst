Machine-level Assembler Version 6.3    Tue Dec 01 17:44:37 2020

  LOC    OBJ   SOURCE
hex*dec

0  *0    8011  	ldc inmsg	;request input
1  *1    FFF7  	sout
2  *2    8042  	ldc inbuf	;get address of input buffer
3  *3    FFF6  	sin
4  *4    8042  loop: 	ldc inbuf
5  *5    2041  	add length
6  *6    F100  	ldi
7  *7    C00C  	jz done
8  *8    0041  	ld length
9  *9    2040  	add one
A  *10   1041  	st length
B  *11   9004  	ja loop
C  *12   8022  done:	ldc outmsg
D  *13   FFF7          sout
E  *14   0041  	ld length
F  *15   FFFD  	dout
10 *16   FFFF  	halt
11 *17   0045  inmsg:	dw "Enter a string: "
12 *18   006E
13 *19   0074
14 *20   0065
15 *21   0072
16 *22   0020
17 *23   0061
18 *24   0020
19 *25   0073
1A *26   0074
1B *27   0072
1C *28   0069
1D *29   006E
1E *30   0067
1F *31   003A
20 *32   0020
21 *33   0000
22 *34   0054  outmsg: dw "The length of the string is: "
23 *35   0068
24 *36   0065
25 *37   0020
26 *38   006C
27 *39   0065
28 *40   006E
29 *41   0067
2A *42   0074
2B *43   0068
2C *44   0020
2D *45   006F
2E *46   0066
2F *47   0020
30 *48   0074
31 *49   0068
32 *50   0065
33 *51   0020
34 *52   0073
35 *53   0074
36 *54   0072
37 *55   0069
38 *56   006E
39 *57   0067
3A *58   0020
3B *59   0069
3C *60   0073
3D *61   003A
3E *62   0020
3F *63   0000
40 *64   0001  one: 	dw 1
41 *65   0000  length:	dw 0 
42 *66   0000  inbuf:	dw 81 dup 0
93 *147  ========= end of testmyshit.mas =========================


         Symbol/Cross-Reference Table

Symbol                   Address     References
                          (hex)       (hex)

 loop                      4           B  
 done                      C           7  
 inmsg                     11          0  
 outmsg                    22          C  
 one                       40          9  
 length                    41          5   8   A   E  
 inbuf                     42          2   4  

Input file   = testmyshit.mas
Output file  = testmyshit.mac
List file    = testmyshit.lst 
Number base  = decimal
Label status = case sensitive
