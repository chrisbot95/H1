Machine-level Assembler Version 6.3    Thu Sep 24 21:58:08 2020

  LOC    OBJ   SOURCE
hex*dec

0  *0    8014  ldc count
1  *1    F700  swap
2  *2    4001  ldr 1
3  *3    2013  add one
4  *4    5001  str 1
5  *5    8014  loop: ldc count
6  *6    2011  add new
7  *7    F100  ldi
8  *8    FFFD  dout
9  *9    0011  ld new 
A  *10   2013  add one
B  *11   1011  st new
C  *12   0019  ld counter
D  *13   3013  sub one
E  *14   1019  st counter
F  *15   D005  jnz loop
10 *16   FFFF  halt
11 *17   0000  new: dw 0
12 *18   0000  x: dw 0
13 *19   0001  one: dw 1
14 *20   0000  count: dw 5 dup 0
19 *25   0005  counter: dw 5
1A *26   ========= end of assignmentbeta.mas =====================


         Symbol/Cross-Reference Table

Symbol                   Address     References
                          (hex)       (hex)

 loop                      5           F  
 new                       11          6   9   B  
 x                         12         
 one                       13          3   A   D  
 count                     14          0   5  
 counter                   19          C   E  

Input file   = assignmentbeta.mas
Output file  = assignmentbeta.mac
List file    = assignmentbeta.lst 
Number base  = decimal
Label status = case sensitive
