!o        
loopq:  ldc msg0
        sout
        ldc '\n'
        aout
        ain
        sub no
        jz done
        sub yes
        jz start
        ja loopq
start:  ldc msg1
        sout
        ldc '\n'
        aout
        din
        st n
        push
        mult
        st msize
        ldc msg2
        sout
        ldc '\n'
        aout
loopm1: din             ;start inputing numbers into matrixA
        push
        ldc matrixA
        add i
        sti
        ld i
        add one
        st i
        sub msize
        jn loopm1

        ldc msg3
        sout
        ldc '\n'
        aout
        ldc 0
        st i
loopm2: din             ;start inputing numbers into matrixB
        push
        ldc matrixB
        add i
        sti
        ld i
        add one
        st i
        sub msize
        jn loopm2
        ldc '\n'
        aout
        ldc 0
        st i

loopi:  ld j
        push
        ld n
        mult
        add i
        st Aoff

        ld i
        push
        ld n
        mult
        add k
        st Boff

        ldc matrixA
        add Aoff
        ldi
        push
        ldc matrixB
        add Boff
        ldi
        mult
        add sum
        st sum

        ld i
        add one
        st i
        sub n
        jn loopi

        ld sum
        push
        ldc matrixC
        add Cindex
        sti
        ld Cindex
        add one
        st Cindex

        ldc 0
        st i
        st sum
        ld k
        add one
        st k
        sub n
        jn loopi

        ldc 0
        st i
        st sum
        st k
        ld j
        add one
        st j
        sub n
        jn loopi

        ldc 0
        st i
        st j
loopd:  ldc matrixC
        add i
        ldi
        dout
        ldc ' '
        aout
        ld i
        add one
        st i
        sub msize
        jzop nextp
        ld j
        add one
        st j
        sub n
        jzop skip
        ja loopd
skip:   ldc '\n'
        aout
        ldc 0
        st j
        ja loopd
nextp:  ldc '\n'
        aout
        aout
        ja loopq

done:   halt
no:     dw 110
yes:    dw 11
Cindex: dw 0
Aoff:   dw 0
Boff:   dw 0
i:      dw 0
j:      dw 0
k:      dw 0
sum:    dw 0
one:    dw 1
n:      dw 0
msize:  dw 0
msg0:   dw "Is there another problem? (y/n)"
msg1:   dw "please enter the value 'n' for the size of the matrices:"
msg2:   dw "please enter the values for matrix A:"
msg3:   dw "please enter the values for matrix B:"
matrixA:dw 100 dup 0
matrixB:dw 100 dup 0
matrixC:dw 100 dup 0